services:

  reservations:
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    command: pnpm run start:dev reservations
    ports:
      - '3000:3000'
    env_file:
      - ./apps/reservations/.env
    volumes:
      - .:/app
      - /usr/src/app/node_modules


  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    environment:
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - ./apps/auth/.env
    command: pnpm run start:dev auth
    ports:
      - '3001:3001'
    volumes:
      - .:/app
      - /usr/src/app/node_modules

  mongo:
    image: mongo
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONOG_INITDB_DATABASE: sleepr
    volumes:
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - sleepr2-db-data:/data/db
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8089:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false

volumes:
  sleepr2-db-data:
